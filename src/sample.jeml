
// name: jeml == Javascript-Embaded Markup Language

import layout "./layout"

import abc "./abcdefe"
import efg "./okkkkkk"
import efk "./kkkkkkk"

import { abc as dd, default as abc } "./kkkkk"
import {ffff} "./ooooo"

import { default as abc, okk as ff } "./abcdefg"

default (name, body) {
	html {
	  `head()`
		`body()`
  }
}

mixin body {

}

// at last
export name (abc, efg) {

}

export okk (efg) {

}

/* in `layout.jeml`
===================
default name (title) {
	html: {
		head: {
			title: `title`
			script(src="......")
			script(src="......")
		}
		body: {
			`body`
		}
	}
}
*/

mixin abc {
	for index: value in `xxx` {

	}
}

// function body = ...
export mixin body {

}

export name {

}

html: {
	head: {
		h1: `title`
		h2: "ok"
	}
	body: {
		"I am good"
		"okkk"
		`condition > 10 ? ok : bad`

		// iterator over key, use for ... in
		for (_, number) in `numbers.sort()` {

		}

		// kind of like while loop
		for `expression` {

		}

		if `x > 10` {

		}
		else `x > 10` {

		}
		else {

		}

		for `expression` {

		}

		p(id=`y`)

		p(`'name="good" ok="yes"'`)

		% let users = [
		%	  { name: "okk", number: "good" },
		%	  { name: "kaka", number: "ddd" }
		% ]

		for user in `users` {
			p: { "User name: " `user.name` }
			p: { "User number: " `user.number` }
		}

		% let abc = efg
		% let okk = ccc

		`name("hello", 123)`

		// mixin just function
		mixin name (name, number) {
			`name.ok`
		}
	}
}
