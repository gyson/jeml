
/*
It's moved to a seperate module ?

var compiled = go.template("each name in `names` { name: `name` }")
var doc = compiled({ names: ["hi", "ok"]})
// => "<name>hi</name><name>ok</name>"
*/
// var xxx = yield go.templateFile("fs")
//

// on("js")
// on("json")
// on("reml")
// on("rejs")

// go.require.on("js", function)
// go.require.on("json", function () {
//
// })
// go.require.off("json")
// go.require.on("json", function () { ... });

// `body()`

// go.template("template string")   // dont support import
// yield go.templateFile("address") // support import

// jeml.template()
// yield jeml.templateFile()

// yield $require("./xxx.jeml")

// // $require("./head.jeml")
// import head "./head.jeml" // it's function
// import body "./body.jeml" // it's function

// // $load("./abcd.css")
// import xxx !"./abcd.css" // it's string
// import raw !"./rawfile.js" // return a string

// // $require("gocsp")
// import go "gocsp" // js object


for index: name in `abc` {

}

if `name` {

} else `name` {

} else `name` {

} else {

}

for item in `list` {

}

mixin name (a, b, c) {
	html {
    % statement
		% statement
		`exp`
		% statement
  }
}

// if `false` {
// 	p: "yes"
// }
// else if `true` {
// 	p: " play around is good to go"
// }
// else {
// 	ll: "dsds"
// }

// This is comment
/*
	mutliple line comment
*/

// !"string escaped"
p:  | name is good to play with
	| but how to make it perfect ?
	| this is a big problem
	| I cannot solve it
	| can you ?
	| { x > 10 }

script:
	| var x > 10;
	| var name > 20;
	| document.wriet(function () {
	|
	| });




ff: each value, index in `["2", 3, 4]` {
	v(f=`index`): `value`
	`hello()`
}

mixin hello {

	p: "helloooooooo"
}

html: {
	head: {
		title: "I am title"
	}
}

`okk`
